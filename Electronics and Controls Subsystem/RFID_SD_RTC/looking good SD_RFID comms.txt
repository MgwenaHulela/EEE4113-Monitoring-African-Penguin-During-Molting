#include <SPI.h>
#include <SD.h>
#include <MFRC522.h>

// Pin definitions
#define SD_CS 5
#define RFID_CS 15
#define RST_PIN 27
#define SPI_SCK 18
#define SPI_MISO 19
#define SPI_MOSI 23

MFRC522 mfrc522(RFID_CS, RST_PIN); // Create MFRC522 instance

void listFiles() {
  Serial.println("üîç Listing SD card contents:");
  File root = SD.open("/");
  if (!root) {
    Serial.println("‚ùå ERROR: Failed to open root directory");
    return;
  }

  File entry = root.openNextFile();
  while (entry) {
    Serial.print("üìÑ ");
    Serial.print(entry.name());
    if (entry.isDirectory()) Serial.print("/ <DIR>");
    else {
      Serial.print(" | Size: ");
      Serial.print(entry.size());
      Serial.print(" bytes");
    }
    Serial.println();
    entry = root.openNextFile();
  }
  root.close();
}

bool writeLog(const String& message) {
  digitalWrite(RFID_CS, HIGH); // Disable RFID
  digitalWrite(SD_CS, LOW);    // Select SD card

  File logFile = SD.open("/log.txt", FILE_WRITE);
  if (!logFile) {
    Serial.println("‚ùå ERROR: Could not open log.txt for appending");
    digitalWrite(SD_CS, HIGH);
    return false;
  }

  logFile.println(message);
  logFile.close();
  Serial.println("‚úÖ Log written to log.txt");

  digitalWrite(SD_CS, HIGH);
  return true;
}

void setup() {
  Serial.begin(115200);
  delay(1000);
  Serial.println("üîß Initializing system...");

  pinMode(SD_CS, OUTPUT);
  pinMode(RFID_CS, OUTPUT);
  digitalWrite(SD_CS, HIGH);
  digitalWrite(RFID_CS, HIGH);
  Serial.println("DEBUG: CS pins set to OUTPUT and HIGH.");

  SPI.begin(SPI_SCK, SPI_MISO, SPI_MOSI);
  Serial.printf("‚úÖ Shared SPI configured on SCK=%d, MISO=%d, MOSI=%d\n", SPI_SCK, SPI_MISO, SPI_MOSI);

  // Init RFID
  mfrc522.PCD_Init();
  Serial.printf("‚úÖ RFID initialized on CS=%d\n", RFID_CS);

  // Init SD
  Serial.println("DEBUG: Calling SD.begin()...");
  if (!SD.begin(SD_CS)) {
    Serial.println("‚ùå ERROR: SD card initialization failed!");
    return;
  }
  Serial.printf("‚úÖ SD initialized on CS=%d\n", SD_CS);

  uint8_t cardType = SD.cardType();
  if (cardType == CARD_NONE) Serial.println("‚ùå No SD card detected.");
  else Serial.printf("SD card type: %s\n", cardType == CARD_MMC ? "MMC" :
                                     cardType == CARD_SD ? "SDSC" :
                                     cardType == CARD_SDHC ? "SDHC" : "UNKNOWN");

  // Check if log.txt exists
  Serial.println("DEBUG: Checking if log.txt exists...");
  if (!SD.exists("/log.txt")) {
    Serial.println("DEBUG: log.txt not found, creating...");
    File logFile = SD.open("/log.txt", FILE_WRITE);
    if (!logFile) {
      Serial.println("‚ùå ERROR: Could not create log.txt");
    } else {
      logFile.println("üîì Log created.");
      logFile.close();
      Serial.println("‚úÖ log.txt created");
    }
  }

  listFiles(); // Show what‚Äôs in the SD card

  Serial.println("üîß Setup complete ‚ñ∂ awaiting RFID or timeout");
}

void loop() {
  Serial.println("DEBUG: Starting RFID polling loop (5s timeout)...");
  unsigned long start = millis();
  while (millis() - start < 5000) {
    if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) continue;

    Serial.print("üìõ Tag detected ‚ñ∂ UID=");
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
      Serial.print(mfrc522.uid.uidByte[i], HEX);
      if (i < mfrc522.uid.size - 1) Serial.print(":");
    }
    Serial.println();

    Serial.println("DEBUG: Attempting to log to SD card...");
    if (!writeLog("RFID Tag Detected")) {
      Serial.println("‚ùå ERROR: log append failed");
    }
    Serial.println("DEBUG: SD card log write attempt finished.");

    mfrc522.PICC_HaltA(); // Halt PICC
    break;
  }

  delay(2000); // Wait before scanning again
}



5:56:52.437 -> üìÑ weight_data_400g.csv | Size: 1531 bytes
15:56:52.437 -> üìÑ weight_data_500g.csv | Size: 1531 bytes
15:56:52.437 -> üìÑ weight_data_840g.csv | Size: 1531 bytes
15:56:52.484 -> üìÑ log.txt | Size: 19 bytes
15:56:52.484 -> üîß Setup complete ‚ñ∂ awaiting RFID or timeout
15:56:52.484 -> DEBUG: Starting RFID polling loop (5s timeout)...
15:56:59.484 -> DEBUG: Starting RFID polling loop (5s timeout)...
15:57:06.456 -> DEBUG: Starting RFID polling loop (5s timeout)...
15:57:06.489 -> üìõ Tag detected ‚ñ∂ UID=FA:E5:35:02
15:57:06.489 -> DEBUG: Attempting to log to SD card...
15:57:06.559 -> ‚ùå ERROR: Could not open log.txt for appending
15:57:06.600 -> ‚ùå ERROR: log append failed
15:57:06.600 -> DEBUG: SD card log write attempt finished.
15:57:08.567 -> DEBUG: Starting RFID polling loop (5s timeout)...
15:57:10.653 -> üìõ Tag detected ‚ñ∂ UID=FA:E5:35:02
15:57:10.653 -> DEBUG: Attempting to log to SD card...
15:57:10.686 -> ‚úÖ Log written to log.txt
15:57:10.686 -> DEBUG: SD card log write attempt finished.
15:57:12.684 -> DEBUG: Starting RFID polling loop (5s timeout)...
15:57:14.619 -> üìõ Tag detected ‚ñ∂ UID=FA:E5:35:02
15:57:14.619 -> DEBUG: Attempting to log to SD card...
15:57:14.650 -> ‚úÖ Log written to log.txt
15:57:14.650 -> DEBUG: SD card log write attempt finished.



